<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html><head></head><body>

















<div class="WordSection1">
<p class="MsoNormal" style="text-align: center;" align="center"><b><span style="font-size: 14.0pt;font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Background for Programming Assignments<i></i></span></b></p>
<p class="MsoNormal" style="text-align: center;" align="center"><b><span style="font-size: 14.0pt;font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">CS 261 Programming Systems</span></b></p>
<p class="MsoNormal"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">&#160;</span></b></p>
<div style="border: double windowtext 2.25pt;padding: 0in 0in 0in 0in;">
<p class="MsoNormal" style="border: none;padding: 0in;"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">&#160;</span></b></p>
</div>
<p class="MsoNormal"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">&#160;</span></b></p>
<p class="MsoNormal" style="text-align: justify;"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Vision for all CS261 Assignments:</span></b></p>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">In CS261, all programs will focus on developing object oriented solutions to applications. Therefore, unlike CS260 were we focused on Data Abstraction, now we will turn our focus to developing complete applications using a set of classes working together to solve the problem. The key idea is to break down the problem into small pieces – maybe building blocks – and assign those responsibilities to individual classes. Then, as a team these set of classes create an Object Oriented Solution. You will notice that the assignments are practical problems that face the real world. In reality, each of these problems could take many “man-months” to create. Your job will be to create an application program using a sequence of classes to show a solid understanding of Object Oriented and data structures. Focusing on just the data structures is not enough. Think this term about the application and how it could be set up if this was a real-world application. You will want to focus on how to design classes that are well structured, efficient, that work together, and where each class has a specific <b>“job”</b>. </span></p>
<p class="MsoBodyText"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">&#160;</span></p>
<p class="MsoBodyText"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">&#160;</span></p>
<p class="MsoBodyText"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Every </span></b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">program this term will need the following constructs:</span></p>
<p class="MsoBodyText" style="margin-left: .5in;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Every program must have 5 or more classes </span></p>
<p class="MsoBodyText" style="margin-left: .5in;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Class designs must include single inheritance hierarchies</span></p>
<p class="MsoBodyText" style="margin-left: .5in;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Each class that manages dynamic memory must have (a) constructor, (b) destructor (C++), (c) copy constructors (C++). Starting with Assignment #3, each class must have an assignment operator as well member functions with arguments; pass class types as constant references whenever appropriate.</span></p>
<p class="MsoBodyText" style="margin-left: .5in;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">All data members must be private or protected (never public).</span></p>
<p class="MsoBodyText" style="margin-left: .5in;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">All arrays must be dynamically allocated with new</span></p>
<ol style="margin-top: 0in;" start="6" type="1">
<li class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Global variables/objects are not allowed; global constants are fine</span></li>
<li class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Use modular design, separating the .h files from the .<span class="SpellE">cpp</span> files. Remember, .h files should contain the class header and any necessary prototypes. The .<span class="SpellE">cpp</span> files should contain function definitions. You must have at least 1 .h file and 2 .<span class="SpellE">cpp</span> files. <b>Never &quot;#include&quot; .<span class="SpellE">cpp</span> files except for writing templates!</b></span></li>
</ol>
<p class="MsoBodyText" style="margin-left: .5in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">&#160;</span></p>
<p class="MsoBodyText"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Whenever you write a class in CS261 – you need to ask yourself “What is the purpose of this class”. If it doesn’t have a reason to exist, then it probably shouldn’t be a class. Or, if its responsibilities are too broad, then it should be broken down into further classes. This is key. <span style="background: lightgrey;">Each class should have a specific job.</span> <i>The responsibilities should be the public member functions and the data that they work with should be the private (or protected) data members. </i>The classes that you design should work in conjunction with one another – not in isolation of one another. This represents a big change. This means that you will really need to focus more on the application than you may have done in CS260. In fact, you no longer need to limit I/O to the client program…instead you will want that “job” to be done where it makes the most sense!<span>&#160; </span></span></p>
<p class="MsoBodyText"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">&#160;</span></p>
<p class="MsoNormal" style="text-align: justify;"><b><span style="text-decoration: underline;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Guidelines for all CS261 Programs:</span></span></b></p>
<p class="MsoNormal" style="text-align: justify;"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">To get full credit for the assignments, you will need to:</span></b></p>
<p class="MsoNormal" style="margin-left: .55in;text-align: justify;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Turn in a design write-up that analyzes your solution in terms of achieving the OOP objectives. Minimum 600 words. Upload this to Desire2Learn <span class="SpellE">dropbox</span> as design.txt. Include the names of your group members in <span class="SpellE">dropbox</span>.</span></p>
<p class="MsoNormal" style="margin-left: .55in;text-align: justify;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Turn in a written discussion of a <span class="SpellE"><span class="GramE">unix</span></span> debugger in terms of how it assisted code development. Make sure to use a <span class="SpellE">unix</span> debugger with each project. Minimum 400 words. Upload this to Desire2Learn <span class="SpellE">dropbox</span> as unix.txt. Include the names of your group members in <span class="SpellE">dropbox</span>.</span></p>
<p><em><b>Organize your directories:<br/></b></em></p>
<p>mkdir cs261&#160; //create directory for the class</p>
<p>cd cs261 &#160;&#160;&#160;&#160;&#160; //go inside cs261</p>
<p>mkdir project1 project2 project3 project4 project5 //create directories for each project</p>
<p>cd project1&#160;&#160; //go inside project1 directory</p>
<p>vi project1.cpp //create source files for the project</p>
<p>g++ -o proj1 *.cpp //compile the project, or even better, create a makefile</p>
<p>./proj1&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;&#160; //run the project</p>
<em><b>Email the .tar file containing your project directory to your instructor on the linux server.&#160;</b></em><b><em></em></b>To create a tar file of the project directory:
<div class="WordSection1">
<ul>
<li>remove the executable files in the project directory: rm proj1</li>
<li>go to the parent directory that contains the project directory: cd ..</li>
<li>tar -cvf project1.tar project1</li>
</ul>
</div>
<div class="WordSection1"></div>
<div class="WordSection1">To email the tar file to the instructor and yourself:</div>
<div class="WordSection1">
<p>mailx -s &quot;cs162 project1 submission&quot; -a project1.tar lliang your-login-name</p>
<p>entering message here (an example: known bugs: ...)</p>
<p>Team members: ...</p>
<p>Known bugs: ...</p>
<p>.</p>
<p>a single period at the beginning of new line will send the email</p>
<p>To check if you have sent the file correctly:</p>
<p>mailx</p>
<p>assuming the message index is 3, type</p>
<p>w 3</p>
<p>to save the message. It will ask you for attached file name if the message is not empty. If it&#39;s an empty message, 3 is the tar file name. The file will be saved in the current working directory.</p>
<p>The following command will extract from the tar file.</p>
<p>tar xvf tarFileName</p>
</div>
<span style="font-family: &#39;Times New Roman&#39;,&#39;serif&#39;;"></span>
<p class="MsoNormal"><span style="font-family: &#39;Times New Roman&#39;,&#39;serif&#39;;">&#160;</span></p>
<p class="MsoNormal"><span style="font-family: &#39;Times New Roman&#39;,&#39;serif&#39;;">Replace project1 with appropriate project number for subsequent assignments. The message body should contain the names of the group members.</span><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;"></span></p>
<p class="MsoNormal" style="text-align: justify;"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;"><span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </span></span></b></p>
<p class="MsoNormal" style="margin-left: .25in;text-align: justify;text-indent: -.25in;"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Design Write-up – Answer these questions:</span></b></p>
<p class="MsoListParagraphCxSpFirst" style="margin-left: .25in;text-align: justify;text-indent: 0in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">How well did the data structure perform for the assigned application?</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: .25in;text-align: justify;text-indent: 0in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Would a different data structure work better? Which one and why...</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: .25in;text-align: justify;text-indent: 0in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">What was efficient about your design and use of the data structure?</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: .25in;text-align: justify;text-indent: 0in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">What was <span style="text-decoration: underline;">not</span> efficient?</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: .25in;text-align: justify;text-indent: 0in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">What would you do differently if you had more time?</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: .25in;text-align: justify;text-indent: 0in;"><b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">How well your program meets the goals of being Object Oriented:</span></b><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;"></span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Were there classes that had clear responsibilities?</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Did one class do the job that another should have? (e.g., is a list class string comparing the underlying data still?)</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Where did hierarchical relationships fit in and would it be effective in a larger application?</span></p>
<p class="MsoListParagraphCxSpMiddle" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">What was <span style="text-decoration: underline;">not</span> Object Oriented?</span></p>
<p class="MsoListParagraphCxSpLast" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;"><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">Can you envision a design that would have been more Object Oriented (if you had more time)?</span></p>
</div>


<script type="text/javascript">D2LMathML.DesktopInit('https://s.brightspace.com/lib/mathjax/2.6.1/MathJax.js?config=MML_HTMLorMML','https://s.brightspace.com/lib/mathjax/2.6.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML');</script></body></html>