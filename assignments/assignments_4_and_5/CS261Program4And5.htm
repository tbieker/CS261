<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html><head></head><body>

















<div class="WordSection1">
<p class="MsoNormal" style="text-align: center;" align="center"><b><span style="font-size: 14.0pt;font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Programming Assignments #4 and 5<i></i></span></b></p>
<p class="MsoNormal" style="text-align: center;" align="center"><b><span style="font-size: 14.0pt;font-family: &#39;Palatino&#39;,&#39;serif&#39;;">CS 261 Programming Systems</span></b></p>
<p class="MsoNormal"><b><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">&#160;</span></b></p>
<div style="border: double windowtext 2.25pt;padding: 0in 0in 0in 0in;">
<p class="MsoNormal" style="border: none;padding: 0in;"><b><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">&#160;</span></b></p>
</div>
<h1>For This Program</h1>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">With both programs #4 and #5 you will be implementing your solutions using Java. Your goal must be to develop an object-oriented solution but <span class="GramE">this time implement</span> it in Java. <span style="background: silver;">Make sure that your OO Design is not centered <span class="GramE">around</span> your data structures – your data structures support the design but shouldn’t be the primary emphasis of your design.</span> Your Java programs must follow these rules:</span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">1) <b><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">No public or friendly fields (data members<span class="GramE">)<span>&#160; </span>*</span>** NONE!!!***</span></b></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">2) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">No friendly methods (member functions)</span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">3) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Yes, you SHOULD use the string class!</span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">4) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Limit your use of static methods – these should be restricted to just protected utility functions and main</span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">5) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Use an inheritance hierarchy using “extends”; there must be a minimum of <span style="text-decoration: underline;">5 classes with 3 of them in a hierarchy</span>. <i>These should not be isolated to just your data structures.</i></span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">6) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">The application that USES the hierarchy must be in a class on its own. It could be part of a hierarchy, so think about that.</span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">7) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Create at least one abstract base class </span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">8) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Implement at least one constructor with arguments</span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">9) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Implement dynamic binding with one of your hierarchies and experiment with how it works in Java. Prove to yourself that the functions are being overridden versus overloaded. ***Write about this</span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;text-indent: -.25in;">10) <span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Try out the super keyword in invoking a base class’ constructor. <i>This is what we use instead of an initialization list. ***Write about this</i></span></p>
<p class="MsoNormal" style="margin-left: 1.0in;text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">&#160;</span></p>
<p class="MsoNormal" style="margin-left: .5in;text-align: justify;"><span class="GramE"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">For each of the above that you experiment with, write up information about it in your design <span class="SpellE">writeup</span>.</span></span><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;"></span></p>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">&#160;</span></p>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">You are required to still turn in 1 page paper on how this solution is object oriented (or what you learned about OOP with this program) at Program #5 submission. Instead of writing up a page about a debugger, write about the IDE you used (<span class="SpellE"><span class="GramE">eg</span></span><span class="GramE">.,</span> Eclipse). <i></i></span></p>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">For submission, please upload the .jar file in Desire2Learn dropbox. The .jar file is required to include the source files and you need to specify the main class when creating the .jar file.<br/></span></p>
<h1>Data Structures</h1>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">In these last two programs, you can use Java Collection Framework for your data structures. Use interfaces whenever you can. </span></p>
<p class="MsoNormal">&#160;</p>
<h1><span class="GramE">Program <span>&#160;</span>Requirements</span> – Program #4 – step 1</h1>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;background: #EEECE1;">Your job in the last two assignments is to create <span class="GramE">a simple</span> accounting software, starting with a spread sheet tool for data management. Users should be able to have columns for:<span>&#160; </span>item #, description of the item, debit, and credit. Your code will add in the totals after executing. Users should be able to request adding additional items, removing items, by description, and searching for items given a description. So I could search for all matching items for expenses at home depot for example.</span></p>
<p class="MsoBodyText">&#160;</p>
<p class="MsoBodyText">Your job is to come up with a design of an OO framework that would support simple accounting transactions. <span>&#160;</span>Although you all have the ability to write this using procedural abstraction, the key is to make sure to solve this problem using Object Oriented methodologies with dynamic binding. <i>The use of external data file is advisable but not required for step 1.</i></p>
<p class="MsoNormal"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">&#160;</span></p>
<h1><span class="GramE">Program<span>&#160; </span>Requirements</span> – Program #5 – step 2</h1>
<p class="MsoNormal" style="text-align: justify;"><span style="font-family: &#39;Palatino&#39;,&#39;serif&#39;;">Given the design in Program #4, think about how this could be applied to a larger scale to be more realistic. It will need to use external data file and support a mechanism for providing different functionality. Quicken, for example, has modes for allowing you to work in different accounts (e.g., bank accounts, credit card accounts, named expense/income categories (like a business), and rental property expenses/income). Enhance your program with modes so that it can work with different types of expenses, all based on the foundation set from Step #1. </span><span style="font-family: &#39;Palatino Linotype&#39;,&#39;serif&#39;;">There are no hard and fast rules for this assignment, making your software more useful for the real world! </span></p>
</div>


<script type="text/javascript">D2LMathML.DesktopInit('https://s.brightspace.com/lib/mathjax/2.6.1/MathJax.js?config=MML_HTMLorMML','https://s.brightspace.com/lib/mathjax/2.6.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML');</script></body></html>